[{"/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/App.js":"1","/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/reportWebVitals.js":"2","/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/containers/Foods.jsx":"3","/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/containers/Orders.jsx":"4","/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/urls/index.js":"5","/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/containers/Restaurants.jsx":"6","/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/reducers/restaurants.js":"7","/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/apis/restaurants.js":"8","/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/reducers/foods.js":"9","/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/components/StyledText.jsx":"10","/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/components/FoodOrderDialog.jsx":"11","/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/components/Buttons/CountUpButton.jsx":"12","/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/components/shared_style.js":"13","/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/apis/line_foods.js":"14","/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/components/OrderDetailItem.jsx":"15","/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/style_constants.js":"16","/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/apis/foods.js":"17","/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/components/FoodWrapper.jsx":"18"},{"size":919,"mtime":1610853012092,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1610851428039,"results":"21","hashOfConfig":"20"},{"size":5568,"mtime":1610865398891,"results":"22","hashOfConfig":"20"},{"size":3771,"mtime":1610867316843,"results":"23","hashOfConfig":"20"},{"size":440,"mtime":1610853719729,"results":"24","hashOfConfig":"20"},{"size":2880,"mtime":1610856243165,"results":"25","hashOfConfig":"20"},{"size":651,"mtime":1610855510283,"results":"26","hashOfConfig":"20"},{"size":243,"mtime":1610853790533,"results":"27","hashOfConfig":"20"},{"size":609,"mtime":1610862445943,"results":"28","hashOfConfig":"20"},{"size":195,"mtime":1610863096158,"results":"29","hashOfConfig":"20"},{"size":2626,"mtime":1610864606751,"results":"30","hashOfConfig":"20"},{"size":233,"mtime":1610864392202,"results":"31","hashOfConfig":"20"},{"size":510,"mtime":1610864277629,"results":"32","hashOfConfig":"20"},{"size":719,"mtime":1610866155411,"results":"33","hashOfConfig":"20"},{"size":1390,"mtime":1610867005842,"results":"34","hashOfConfig":"20"},{"size":200,"mtime":1610853427723,"results":"35","hashOfConfig":"20"},{"size":251,"mtime":1610861769433,"results":"36","hashOfConfig":"20"},{"size":1052,"mtime":1610863152003,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"aiaajn",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/App.js",[],["78","79"],"/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/reportWebVitals.js",[],["80","81"],"/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/containers/Foods.jsx",["82","83"],"import React, { Fragment, useEffect, useReducer, useState } from 'react';\nimport styled from 'styled-components';\nimport { COLORS } from '../style_constants';\nimport { useHistory,Link } from \"react-router-dom\"\n\n// components\nimport { LocalMallIcon } from '../components/Icons';\nimport { FoodWrapper } from '../components/FoodWrapper';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { FoodOrderDialog } from '../components/FoodOrderDialog';\nimport { NewOrderConfirmDialog } from '../components/NewOrderConfirmDialog';\n\n// reducers\nimport {\n  initialState as foodsInitialState,\n  foodsActionTyps,\n  foodsReducer,\n} from '../reducers/foods';\n\n// apis\nimport { fetchFoods } from '../apis/foods';\nimport { postLineFoods, replaceLineFoods } from '../apis/line_foods';\n\n// images\nimport MainLogo from '../images/logo.png';\nimport FoodImage from '../images/food-image.jpg';\n\n// constants\nimport { REQUEST_STATE } from '../constants';\nimport { HTTP_STATUS_CODE } from '../constants';\n\nconst HeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 8px 32px;\n`;\n\nconst BagIconWrapper = styled.div`\n  padding-top: 24px;\n`;\n\nconst ColoredBagIcon = styled(LocalMallIcon)`\n  color: ${COLORS.MAIN};\n`;\n\nconst MainLogoImage = styled.img`\n  height: 90px;\n`\n\nconst FoodsList = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  margin-bottom: 50px;\n`;\n\nconst ItemWrapper = styled.div`\n  margin: 16px;\n`;\n\nconst submitOrder = () => {\n  // 後ほど仮注文のAPIを実装します\n  console.log('登録ボタンが押された！')\n}\n\nexport const Foods = ({\n  match\n}) => {\n  const history = useHistory();\n  const [foodsState, dispatch] = useReducer(foodsReducer, foodsInitialState);\n  const initialState = {\n    isOpenOrderDialog: false,\n    selectedFood: null,\n    selectedFoodCount: 1,\n    isOpenNewOrderDialog: false,\n    existingResutaurautName: '',\n    newResutaurautName: '',\n  };\n  const [state, setState] = useState(initialState);\n\n  const submitOrder = () => {\n    postLineFoods({\n      foodId: state.selectedFood.id,\n      count: state.selectedFoodCount,\n    }).then(() => history.push('/orders'))\n      .catch((e) => {\n        if (e.response.status === HTTP_STATUS_CODE.NOT_ACCEPTABLE) {\n          setState({\n            ...state,\n            isOpenOrderDialog: false,\n            isOpenNewOrderDialog: true,\n            existingResutaurautName: e.response.data.existing_restaurant,\n            newResutaurautName: e.response.data.new_restaurant,\n          })\n        } else {\n          throw e;\n        }\n      })\n  };\n\n  const replaceOrder = () => {\n    replaceLineFoods({\n      foodId: state.selectedFood.id,\n      count: state.selectedFoodCount,\n    }).then(() => history.push('/orders'))\n  };\n\n  useEffect(() => {\n    dispatch({ type: foodsActionTyps.FETCHING });\n    fetchFoods(match.params.restaurantsId)\n      .then((data) => {\n        dispatch({\n          type: foodsActionTyps.FETCH_SUCCESS,\n          payload: {\n            foods: data.foods\n          }\n        });\n      })\n  }, [])\n\n  return (\n    <Fragment>\n      <HeaderWrapper>\n        <Link to=\"/restaurants\">\n          <MainLogoImage src={MainLogo} alt=\"main logo\" />\n        </Link>\n        <BagIconWrapper>\n          <Link to=\"/orders\">\n            <ColoredBagIcon fontSize=\"large\" />\n          </Link>\n        </BagIconWrapper>\n      </HeaderWrapper>\n      <FoodsList>\n        {\n          foodsState.fetchState === REQUEST_STATE.LOADING ?\n            <Fragment>\n              {\n                [...Array(12).keys()].map(i =>\n                  <ItemWrapper key={i}>\n                    <Skeleton key={i} variant=\"rect\" width={450} height={180} />\n                  </ItemWrapper>\n                )\n              }\n            </Fragment>\n          :\n            foodsState.foodsList.map(food =>\n              <ItemWrapper key={food.id}>\n                <FoodWrapper\n                  food={food}\n                  onClickFoodWrapper={\n                    (food) => setState({\n                      ...state,\n                      isOpenOrderDialog: true,\n                      selectedFood: food,\n                    })\n                  }\n                  imageUrl={FoodImage}\n                />\n              </ItemWrapper>\n            )\n        }\n      </FoodsList>\n      {\n        state.isOpenOrderDialog &&\n        <FoodOrderDialog\n          isOpen={state.isOpenOrderDialog}\n          food={state.selectedFood}\n          countNumber={state.selectedFoodCount}\n          onClickCountUp={() => setState({\n            ...state,\n            selectedFoodCount: state.selectedFoodCount + 1,\n          })}\n          onClickCountDown={() => setState({\n            ...state,\n            selectedFoodCount: state.selectedFoodCount - 1,\n          })}\n          // 先ほど作った関数を渡します\n          onClickOrder={() => submitOrder()}\n          // モーダルを閉じる時はすべてのstateを初期化する\n          onClose={() => setState({\n            ...state,\n            isOpenOrderDialog: false,\n            selectedFood: null,\n            selectedFoodCount: 1,\n          })}\n        />\n      }\n      {\n        state.isOpenNewOrderDialog &&\n        <NewOrderConfirmDialog\n          isOpen={state.isOpenNewOrderDialog}\n          onClose={() => setState({ ...state, isOpenNewOrderDialog: false })}\n          existingResutaurautName={state.existingResutaurautName}\n          newResutaurautName={state.newResutaurautName}\n          onClickSubmit={() => replaceOrder()}\n        />\n      }\n    </Fragment>\n  )\n}\n","/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/containers/Orders.jsx",[],"/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/urls/index.js",[],"/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/containers/Restaurants.jsx",[],["84","85"],"/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/reducers/restaurants.js",[],"/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/apis/restaurants.js",[],"/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/reducers/foods.js",[],"/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/components/StyledText.jsx",[],"/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/components/FoodOrderDialog.jsx",[],"/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/components/Buttons/CountUpButton.jsx",[],"/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/components/shared_style.js",[],"/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/apis/line_foods.js",[],"/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/components/OrderDetailItem.jsx",[],"/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/style_constants.js",[],"/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/apis/foods.js",[],"/Users/morokoshidaiki/own_dev/techpit/uber-eats-like/frontend/src/components/FoodWrapper.jsx",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"86","replacedBy":"90"},{"ruleId":"88","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":61,"column":7,"nodeType":"94","messageId":"95","endLine":61,"endColumn":18},{"ruleId":"96","severity":1,"message":"97","line":119,"column":6,"nodeType":"98","endLine":119,"endColumn":8,"suggestions":"99"},{"ruleId":"86","replacedBy":"100"},{"ruleId":"88","replacedBy":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],["102"],["103"],"no-unused-vars","'submitOrder' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.restaurantsId'. Either include it or remove the dependency array.","ArrayExpression",["104"],["102"],["103"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [match.params.restaurantsId]",{"range":"107","text":"108"},[3013,3015],"[match.params.restaurantsId]"]